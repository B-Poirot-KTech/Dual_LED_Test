.program debounce


isHigh_steady:
    set pins, 0b00000               ; set OUT pin LOW, button not pressed
    wait 0 pin 0                    ; wait for pin to drop
    set x 31                        ; once pin dropped, begin count
debounce_high_start:
    jmp pin isHigh_steady           ;if pin goes back high, reset
    jmp x-- debounce_high_start     ;if x_scratch nonzero,dec & loop, if zero, pin is low
isLow_steady:
    set pins, 0b11111               ;set OUT high, button pressed
    wait 1 pin 0                    ;wait for button pin to go high
    set x 31                        ;once it does, set x scratch 31, begin debounce loop
debounce_low_start:
    jmp pin dec_still_high_from_low ;if pin still high, goto dec x and loop
    jmp isLow_steady                ;otherwise, start over from LOW
dec_still_high_from_low:
    jmp x-- debounce_low_start      ;if x_scratch nonzero,dec & loop, if zero, pin is high, wrap to start



% c-sdk{
    //init func for program
    void debounce_program_init(PIO pio, uint sm, uint offset, uint debounce_output_pin, uint button_pin, float clock_div = 1){
        

        //state machine setup wrap target
        //this function pregenerated by assembler
        pio_sm_config config = debounce_program_get_default_config(offset);

        //allow PIO state machine to control gpio pin
        pio_gpio_init(pio, debounce_output_pin);

        //connect pin to SET instruction in state machine
        sm_config_set_in_pins(&config, button_pin);
        sm_config_set_set_pins(&config, debounce_output_pin, 1);
        sm_config_set_jmp_pin(&config, button_pin);


        //set pin direction to output
        pio_sm_set_consecutive_pindirs(pio, sm, debounce_output_pin, 1, true);
        pio_sm_set_consecutive_pindirs(pio, sm, button_pin, 1, false);


        //set clock divider
        sm_config_set_clkdiv(&config, clock_div);


        //load config, start program
        pio_sm_init(pio, sm, offset, &config);

        //pio_sm_set_enabled(pio, sm, true);

    }
%}
